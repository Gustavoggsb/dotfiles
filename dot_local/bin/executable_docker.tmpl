{{ if .is_wsl -}}
#!/usr/bin/env bash

function get_docker_in_path() {
  which -a docker | grep -v "$0" | head -1
}

function is_docker_from_desktop() {
  if [ "$(get_docker_in_path)" == "/mnt/c/Program Files/Docker/Docker/resources/bin/docker" ]; then
    return 0
  fi
  return 1
}

function echo_blue() {
  printf "\033[0;34m%s\033[0m" "$*" >&2
}

function echo_green_nl() {
  printf "\033[0;32m%s\033[0m\n" "$*" >&2
}

function echo_red_nl() {
  printf "\033[0;31m%s\033[0m\n" "$*" >&2
}

if is_docker_from_desktop; then
  echo_blue "Starting Docker Desktop..."

  # Using `powershell.exe` because of https://github.com/microsoft/WSL/issues/3769
  powershell.exe 'Start "C:\Program Files\Docker\Docker\Docker Desktop.exe"'

  seconds=30
  for ((i = 0; i < seconds; i++)); do
    sleep 1
    "$(get_docker_in_path)" version &>/dev/null
    exit_code=$?
    [ $exit_code -eq 0 ] && break
  done

  if [ $exit_code -eq 0 ]; then
    echo_green_nl " started successfully."
  else
    echo_red_nl " not able to start in $seconds seconds."
    exit $exit_code
  fi
fi

exec "$(get_docker_in_path)" "$@"
{{- end }}
