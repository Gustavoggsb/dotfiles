#!/usr/bin/env bash

get_in_path_except_current() {
  which -a "$1" | grep -A1 "$0" | grep -v "$0"
}

is_docker_from_desktop() {
  if [ "$1" != "/mnt/c/Program Files/Docker/Docker/resources/bin/docker" ] &&
    [ "$1" != "/mnt/c/ProgramData/DockerDesktop/version-bin/docker" ]; then
    return 1
  fi
}

echo_blue() {
  printf "\033[0;34m%s\033[0m" "$*" >&2
}

echo_green_nl() {
  printf "\033[0;32m%s\033[0m\n" "$*" >&2
}

echo_red_nl() {
  printf "\033[0;31m%s\033[0m\n" "$*" >&2
}

docker="$(get_in_path_except_current docker)"

if is_docker_from_desktop "$docker"; then
  echo_blue "Starting Docker Desktop..."

  # Using `powershell.exe` because of https://github.com/microsoft/WSL/issues/3769
  powershell.exe 'Start "C:\Program Files\Docker\Docker\Docker Desktop.exe"'

  seconds=30
  for ((i = 0; i < seconds; i++)); do
    sleep 1

    docker="$(get_in_path_except_current docker)"
    "$docker" info &>/dev/null

    exit_code=$?
    if [ $exit_code -eq 0 ]; then
      break
    fi
  done

  if [ $exit_code -eq 0 ]; then
    echo_green_nl " started successfully."
  else
    echo_red_nl " not able to start in $seconds seconds."
    exit $exit_code
  fi
fi

exec "$docker" "$@"
